SPA

??? addListener ('popState'...

??? what is async() function
??? understand router



Build a Single Page Application with JavaScript (No Frameworks)

-youtube: https://www.youtube.com/watch?v=6BozpmSjk-Y&list=PLvFBAcs5-Ef5YWJRTYfZQAeQnDaMNVIrS&index=51&t=742s
-github: https://github.com/dcode-youtube/single-page-app-vanilla-js


ignore the basic installs and template for a momemnt
skip it for now..


================================================================================================
================================================================================================
================================================================================================
[HTML]
[viewport]

[width=device-width]

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Testing file</title>
</head>


================================================================================================
================================================================================================
================================================================================================
[Basic Template]

-install node

-create the following folders:
	/server.js
	/public
	/views


-start a new project:
	>npm init -y	<=== will generate package.json file


-install express:
	>npm i express
	>npm i ejs
	>npm i --save-dev nodemon



-install nodemon
	>npm i --save-dev nodemon	<=== hot deploy

	-add the following in package.json file:
		"scripst": {
			"start": "nodemon server.js"
		},
	-to run:
		>npm start




	import express from 'express';	//<====== to use 'import' instead of 'request', add   "type": "module", to package.json file
	import path from 'path';

	const app = express();
	const PORT = 3000;
	app.set('view engine', 'ejs');  //<=== for html views
	// EX: http://localhost:3000/test/tt.html
	app.use(express.static("public"));
	app.use(express.json());    //<=== for json request processing from the body
	app.use(express.urlencoded({ extended: true }));



	app.get("/", (req,res)=>{
		console.log("I am in get..");
		res.status("500").json({"msg": "my message"});
	});


	// '/frontend/index.html'
	app.get('/*', (req, res) => {
		res.sendFile(path.resolve('frontend', 'index.html'));
	});


	const PORT = 3000;
	app.listen(PORT || 3000, () =>console.log(`z_Server running on port: http://localhost:${PORT}`));


================================================================================================
================================================================================================
================================================================================================

Build a Single Page Application with JavaScript (No Frameworks)


-youtube: https://www.youtube.com/watch?v=6BozpmSjk-Y&list=PLvFBAcs5-Ef5YWJRTYfZQAeQnDaMNVIrS&index=51&t=742s


===============
/spa
	/frontend
		index.html

			<html lang="en">
			<head>
				<meta charset="UTF-8">
				<meta name="viewport" content="width=device-width, initial-scale=1.0">
				<title>Single Page App</title>
			</head>
			<body>

				<nav class="nav">
					<!-- 'data-link' used for history api, pushed state method-->
					<a href="/" class="nav__link" data-link>Dashboard</a>
					<a href="/posts" class="nav__link" data-link>Posts</a>
					<a href="/settings" class="nav__link" data-link>Settings</a>
				</nav>

				<!-- 'index.js' client entry point -->
				<script type="module"  src="static/js/index.js"></script>

			</body>
			</html>


>npm init -y

>npm i express

>npm i --save-dev nodemon

===============
/spa
	/server.js

			import express from 'express';	//<====== to use 'import' instead of 'request', add   "type": "module", to package.json file
			import path from 'path';

			const app = express();
			const PORT = 3000;

			// point to the static directory
			const __dirname = path.resolve(path.dirname('./'));
			// app.use('static', express.static(path.resolve(__dirname, 'static'))); //first 'static' is causing an error
			app.use(express.static(path.resolve(__dirname, 'frontend', 'static')));
			// app.use(express.static(path.resolve('static')));

			// all calls go back to index.html
			app.get('/*', (req, res) => {
				res.sendFile(path.resolve('frontend', 'index.html'));
			});


			app.listen(PORT || 3000, () =>console.log(`z_Server running on port: http://localhost:${PORT}`));



===============
/spa
	/frontend
		/js
			/index.js

			console.log('index.js is loaded');
			console.log('z_location.pathname_0: ' + location.pathname);

			console.log('z_1.. first line');

			//=============================================================================

			//
			// this function will be called when the user clicks on the link
			// that contains the [data-link] mark
			// overriding the default behaviour of reloading the page
			// ... see: document.addEventListener("DOMContentLoaded",....
			const navigateTo = url => {
				console.log('z_3_b..navigateTo');
				history.pushState(null, null, url);
				z_router();
			}


			// the client will set/get settings before rendering the page
			// loading the contents inside here
			//NOTE: the z_router [async returns a promise]
			const z_router = async () => {

				console.log('\t\tz_4_a..INSIDE async');

				const z_routes = [
					{path: '/', view: () => console.log("Viewing Dashboard")},
					{path: '/posts', view: () => console.log("Viewing Posts")},
					{path: '/settings', view: () => console.log("Viewing Settings")}
				];

				// Test each z_router for potential match
				const potentialMatches = z_routes.map( route => {
					console.log('\t\t\t\tz_4_b..router.map...location.pathname_1: ' + location.pathname);
					return {
						z_route: route,
						isMatch: location.pathname === route.path
					};
				});

				console.log('\t\tz_5..INSIDE async');

				let match = potentialMatches.find(potentialMatche => potentialMatche.isMatch);
				// let match = potentialMatches.filter(potentialMatche => ! potentialMatche.isMatch);
				// let indexes = Object.keys(match);
				// console.log('z_indexes.length: ' + indexes.length);
				// console.log(match);

				// fix an 'undefined' error if the path 'localhost:3000/xyz' was other than
				// the following '/', '/posts', '/settings',
				// then default it to the first z_routes object:  {path: '/', view: () => console.log("Viewing Dashboard")}
				if (!match){
					match = {
						z_route: z_routes[0],
						isMatch: true
					};
				}

				console.log('potentialMatches:');
				console.log(potentialMatches);

				// next
				console.log("\t\tz_6..match.z_route.view()): " + match.z_route.view());

			};

			//=============================================================================

			//*** top-down processing
			//*** this is really the starting point
			//

			//
			// when clicking on the back/forward arrow [history][<-, ->][backward, forward history]
			//
			window.addEventListener("popstate", z_router);


			// listen to the DOMContentLoaded,
			// check if clicked on a link with "[data-link]" then
			// call navigateTo()
			// else, call the z_router() function
			//
			document.addEventListener("DOMContentLoaded", () => {
				console.log('z_2_a..INSIDE addEventListener');
				document.body.addEventListener("click", e => {
					if (e.target.matches("[data-link]")) {
						e.preventDefault();
						console.log('\t\tz_XYZ__..INSIDE addEventListener__e.target.href: ' + e.target.href);
						navigateTo(e.target.href);
					}
				})

				z_router();
			})

			console.log('z_3_a..AFTER addEventListener');

			console.log('z_9..LAST line');







https://www.youtube.com/watch?v=6BozpmSjk-Y&list=PLvFBAcs5-Ef5YWJRTYfZQAeQnDaMNVIrS&index=51&t=742s
stopped @ 20:52 / 37:39





















